diff --git a/websocketpp/websocketpp-0.3.0-alpha4/transport/asio/connection.hpp b/websocketpp/websocketpp-0.3.0-alpha4/transport/asio/connection.hpp
index fa17b78..10cc377 100644
--- a/websocketpp/websocketpp-0.3.0-alpha4/transport/asio/connection.hpp
+++ b/websocketpp/websocketpp-0.3.0-alpha4/transport/asio/connection.hpp
@@ -442,8 +442,8 @@ protected:
         if (ec) {
             // reset the handlers to break the circular reference:
             // this->handler->this
-            m_async_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
-            m_async_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+            /* FIXME patch: nullptr_t.patch */ // m_async_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+            /* FIXME patch: nullptr_t.patch */ // m_async_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
         }
 
         return ec;
@@ -477,7 +477,7 @@ protected:
         }
 
         timer_ptr post_timer;
-        
+
         if (config::timeout_socket_post_init > 0) {
             post_timer = set_timer(
                 config::timeout_socket_post_init,
@@ -969,12 +969,12 @@ protected:
 		// Reset cached handlers now that we won't be reading or writing anymore
 		// These cached handlers store shared pointers to this connection and
 		// will leak the connection if not destroyed.
-		m_async_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
-		m_async_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
-		m_init_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+		/* FIXME patch: nullptr_t.patch */ // m_async_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+		/* FIXME patch: nullptr_t.patch */ // m_async_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+		/* FIXME patch: nullptr_t.patch */ // m_init_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
 
-        m_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
-        m_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+        /* FIXME patch: nullptr_t.patch */ // m_read_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
+        /* FIXME patch: nullptr_t.patch */ // m_write_handler = _WEBSOCKETPP_NULLPTR_TOKEN_;
 
         timer_ptr shutdown_timer;
         shutdown_timer = set_timer(
